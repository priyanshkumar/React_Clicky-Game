{"version":3,"sources":["components/Navigation/Nav.js","components/Header/header.js","components/GameArea/areacard.js","components/GameArea/area.js","components/Footer/footer.js","components/game.js","components/App.js","serviceWorker.js","index.js"],"names":["Nav","props","react_default","a","createElement","className","concat","guessClass","guessMessage","score","topScore","Header","Card","onClick","handleClick","id","alt","src","url","Area","_ref","images","map","_ref2","GameArea_areacard","key","Footer","Game","state","imageArray","game","_this","includes","setState","i","length","splice","shuffle","array","sort","Math","random","Navigation_Nav","this","Header_header","components_GameArea_area","Footer_footer","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.df8ef002.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Nav.css\";\n\nfunction Nav(props) {\n  return (\n    <div className=\"row fixed-top d-flex navbar p-0 m-0\">\n      <div className=\"col-4\">\n        <h2 className=\"text-center m-0 mainheader\">\n          <strong>CLICKY GAME</strong>\n        </h2>\n      </div>\n      <div className=\"col-4 d-flex justify-content-center\">\n        <h2 className={`${props.guessClass} heading m-0`}>\n          {props.guessMessage}\n        </h2>\n      </div>\n      <div className=\"col-4 d-flex justify-content-center\">\n        <h4 className=\"score m-0\">\n          Score: {props.score} | Top Score: {props.topScore}\n        </h4>\n      </div>\n    </div>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport \"./header.css\";\n\nfunction Header() {\n  return (\n    <div className=\"row hero m-0 p-0\">\n      <div className=\"col-12 p-0 d-flex flex-column align-items-center justify-content-center\">\n        <h4>\n          Click on an image to earn points, but don't click on any more than\n          once!\n        </h4>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./areacard.css\";\n\nfunction Card(props) {\n  return (\n    <div className=\"col-3 my-3\">\n      <div\n        className=\"card-img d-flex justify-content-center\"\n        onClick={() => {\n          props.handleClick(props.id);\n        }}>\n        <img alt=\"favourite\" src={props.url} />\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./areacard\";\nimport \"./area.css\";\n\nfunction Area({ images, handleClick, guessClass }) {\n  return (\n    <div className=\"container \">\n      <div className={guessClass}>\n        <div className=\"row mb-4 mt-5\">\n          {images.map(({ id, url }) => {\n            return (\n              <Card url={url} key={id} id={id} handleClick={handleClick} />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Area;\n","import React from \"react\";\nimport \"./footer.css\";\nfunction Footer() {\n  return (\n    <div className=\"\">\n      <div className=\"footer2 px-5 d-flex align-tems center\">\n        <p className=\"m-0 d-flex align-items-center\">NERD Design</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport Nav from \"./Navigation/Nav\";\nimport Header from \"./Header/header\";\nimport Area from \"./GameArea/area\";\nimport Footer from \"./Footer/footer\";\n\nclass Game extends Component {\n  state = {\n    score: 0,\n    topScore: 0,\n    guessMessage: \"Click an image to begin!\",\n    guessClass: \"\"\n  };\n\n  imageArray = [\n    {\n      id: 0,\n      url:\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS-jtgjWqE2C8KkL_XmL3g4J-RQis2J663VbYf3QMXAaQUEAT1K0w\"\n    },\n    {\n      id: 1,\n      url:\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTRyXfHN3Lq4jGsIt9khpNd9FgNNMEjY60L9ClqZPTxamYuMhxQ\"\n    },\n    {\n      id: 2,\n      url:\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQXPXbAolyNzhK1XuihCghOJ7ZpHbxWCTt-m_OWAACgPr6bbmErUQ\"\n    },\n    {\n      id: 3,\n      url:\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQvMmEQMKuvxOIzlVGdz6vSwgnXAr_s42GfoQMkjz1WgHodAoxqzg\"\n    },\n    {\n      id: 4,\n      url:\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSN7hpGOsLgQk3OfkqlCuJqNskGeyU2_7q7rt0BhgbxmLVaorDC\"\n    },\n    {\n      id: 5,\n      url:\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQLbhnpuwHp-_miO7Hbu_gxOPcuZDZrEpbVncOZu324frHhVECK\"\n    },\n    {\n      id: 6,\n      url:\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQT4jUc--2gZRPb_08St1FrfkkIDTsPw4Irr0DmLQzjj7FkQgD6jg\"\n    },\n    {\n      id: 7,\n      url:\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQKue0RaL3kdQgZgEdf9zZ22iFT83kpijiegJ1xFJfGxfeRAyXZsA\"\n    },\n    {\n      id: 8,\n      url:\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRHqvhPjaPHOC00j8c42xv5zFKySPpTyQCiQdSUbZ1aFrIZXJoO\"\n    },\n    {\n      id: 9,\n      url:\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTG413kdOpTHcr4RLQ0OpFjrOBpAwBKD-r9DzYfQDnonmXjiNd_dg\"\n    },\n    {\n      id: 10,\n      url:\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRh4rCJw810w5dh1QqjrrH5QcbjRFgmBgDCrnt2x4MMf8XSu6dbXg\"\n    },\n    {\n      id: 11,\n      url:\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRva1kxC4AU9gaQVqYh6uVUPsq-ML1kLSJCIBiCJTQQ7GdqOQm5kw\"\n    }\n  ];\n  game = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\n  handleClick = id => {\n    if (this.game.includes(id)) {\n      this.setState({\n        score: this.state.score + 1,\n        guessMessage: \"You guessed Correctly!\",\n        guessClass: \"green\"\n      });\n      for (let i = 0; i < this.game.length; i++) {\n        if (id === this.game[i]) {\n          this.game.splice(i, 1);\n        }\n      }\n      this.shuffle(this.imageArray);\n    } else {\n      if (this.state.topScore < this.state.score) {\n        this.setState({\n          topScore: this.state.score,\n          score: 0,\n          guessMessage: \"You guessed Incorrectly!\",\n          guessClass: \"red\"\n        });\n        this.shuffle(this.imageArray);\n      } else {\n        this.setState({\n          score: 0,\n          guessMessage: \"You guessed Incorrectly!\",\n          guessClass: \"red\"\n        });\n        this.shuffle(this.imageArray);\n      }\n      this.game = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n    }\n  };\n\n  shuffle = array => {\n    array.sort(() => Math.random() - 0.5);\n  };\n\n  render() {\n    return (\n      <div className=\"container-fluid p-0\">\n        <Nav\n          score={this.state.score}\n          topScore={this.state.topScore}\n          guessMessage={this.state.guessMessage}\n          guessClass={this.state.guessClass}\n        />\n        <Header />\n        <Area\n          images={this.imageArray}\n          handleClick={this.handleClick}\n          guessClass={this.state.guessClass}\n        />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from \"react\";\nimport Game from \"./game\";\n\nfunction App() {\n  return <Game />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}